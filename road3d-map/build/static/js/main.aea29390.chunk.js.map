{"version":3,"sources":["components/TitleHeader/index.js","components/Map3D/style.js","components/Map3D/index.js","components/Map2D/style.js","components/Map2D/index.js","App.js","serviceWorker.js","index.js"],"names":["useState","showInput","setShowInput","localStorage","getItem","header","setHeader","useEffect","setItem","className","value","onChange","e","target","onPressEnter","onBlur","type","shape","icon","onClick","darkStyle","Map3D","isShow","visible","this","initMap","forceUpdate","options","Object","assign","tilt","heading","props","map","window","BMapGL","Map","mapRef","restrictCenter","style","enableKeyboard","enableScrollWheelZoom","enableInertialDragging","enableContinuousZoom","setTilt","setHeading","setDisplayOptions","indoor","poi","skyColors","center","zoom","centerAndZoom","Point","onMapLoaded","children","React","Children","child","cloneElement","render","display","position","height","ref","width","renderChildren","onRender","Component","simpleMapStyle","styleJson","Map2D","reducer","accumulator","currentValue","getAverageValue","items","reduce","length","parseData","data","lineData","item","push","geometry","coordinates","loc","dataHander","heatDataHander","max","min","text","colorArr","color1","color2","color3","color4","color5","splitList","category","index","percent","getColorFromColorStops","colorStops","i","startColorStop","endColorStop","startPercent","endPercent","startColor","endColor","relativePercent","startColorObj","Color","endColorObj","sr","red","sg","green","sb","blue","sa","alpha","er","eg","eb","ea","toFixed","dataWeRender","linksData","roadPath","mapStyle","lng","lat","color","bgColor","arrowColor","lineWidth","FizzyText","radius","App","canvasWidth","canvasHeight","state","ShenhaiData","innerHeight","tRef","createRef","onResize","setState","initMapvgl","heatMax","view","mapvgl","initGUIPanel","initCanvas","drawMapvgl","nuConfig","container","canvasContainer","blur","gradient","backgroundColor","heatmap","h337","create","canvas","_renderer","ctx","getContext","heatData","maxText","setValue","radiusText","setData","layer","texture","addLayer","drawTimeText","font","fillStyle","textAlign","textBaseline","save","scale","fillText","restore","roadData","dataMaxWidth","dataMaxHeight","dataMaxValue","dataMinValue","Infinity","hotData","path","link","j","hot","Math","split","k","x","Number","y","preWidth","preHeight","forEach","bindCanvasRef","input","layerSetData","changeHeatMap","setDataMax","setDataMin","changeHeatMapColor","configure","onChangeClick","gui","dat","add","minText","addColor","onFinishChange","__controllers","updateDisplay","getFileContent","fileInput","callback","files","size","file","FileReader","reader","onloadend","evt","readyState","DONE","result","readAsText","onDropUploadClick","_this","preventDefault","stopPropagation","dataTransfer","onload","JSON","parse","removeLayer","onChangeUploadClick","current","addEventListener","removeEventListener","Fragment","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aea29390.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Input, Button} from 'antd';\nimport './index.less';\n\nexport default () => {\n    const [showInput, setShowInput] = useState(false);\n    const [header, setHeader] = useState(localStorage.getItem('title') || '标题');\n\n    useEffect(() => {\n        localStorage.setItem('title', header);\n    }, [header]);\n\n    return (\n        <div className=\"title-header\">\n            <h1>{header}</h1>\n            {showInput && <Input\n                className=\"title-input\"\n                value={header}\n                onChange={e => {setHeader(e.target.value);}}\n                onPressEnter={() => {setShowInput(!showInput);}}\n                onBlur={() => {setShowInput(!showInput);}}\n            />}\n            {!showInput && <Button\n                className=\"title-btn\"\n                type=\"dashed\"\n                shape=\"circle\"\n                icon=\"edit\"\n                onClick={() => {setShowInput(!showInput);}}\n            />}\n        </div>\n    );\n};\n","var snowStyle = [{\n    \"featureType\": \"background\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#fefefeff\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#f0f1f7ff\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"nationalway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"nationalway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"provincialway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"provincialway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"railway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"nationalwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"nationalwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"provincialwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"provincialwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"tertiarywaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"tertiarywaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subwaylabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subwaylabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#80868dff\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"districtlabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#7d82b0ff\"\n    }\n}, {\n    \"featureType\": \"districtlabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"on\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#80868dff\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"manmade\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"manmade\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#eef1fbff\"\n    }\n}, {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        //\"color\": \"#a7c9ffff\"\n        \"color\": \"#a7c9ffff\"\n    }\n}, {\n    \"featureType\": \"green\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#eef1fbff\",\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"on\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#7d82b0ff\"\n    }\n}, {\n    \"featureType\": \"town\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"village\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"weight\": 3\n    }\n}, {\n    \"featureType\": \"cityhighway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"arterial\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"arterial\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"cityhighway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}];\n\nvar darkStyle = [{\n    \"featureType\": \"background\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#070c17ff\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#151e25ff\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"nationalway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"nationalway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"provincialway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"provincialway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"railway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"nationalwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"nationalwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"provincialwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"provincialwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"tertiarywaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"tertiarywaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subwaylabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subwaylabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#80868dff\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"districtlabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#71767aff\"\n    }\n}, {\n    \"featureType\": \"districtlabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"on\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#80868dff\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"manmade\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"manmade\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#070c17ff\"\n    }\n}, {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#0e141dff\"\n    }\n}, {\n    \"featureType\": \"green\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#122228ff\",\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"on\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#5f6468ff\"\n    }\n}, {\n    \"featureType\": \"town\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"village\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"weight\": 3\n    }\n}, {\n    \"featureType\": \"cityhighway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"arterial\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"arterial\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"cityhighway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}];\n\nexport {darkStyle, snowStyle};","import React, {Component} from 'react';\nimport {darkStyle} from './style';\n\nexport default class Map3D extends Component {\n\n    componentDidMount() {\n        this.initMap();\n        this.forceUpdate();\n    }\n\n    initMap() {\n\n        let options = Object.assign({\n            tilt: 60,\n            heading: 0\n        }, this.props.options);\n        let map = new window.BMapGL.Map(this.mapRef, {\n            restrictCenter: false,\n            style: options.style || darkStyle\n        });\n        map.enableKeyboard();\n        map.enableScrollWheelZoom();\n        map.enableInertialDragging();\n        map.enableContinuousZoom();\n        map.setTilt(options.tilt);\n        map.setHeading(options.heading);\n        map.setDisplayOptions({\n            indoor: false,\n            poi: false,\n            skyColors: options.skyColors || [\n                'rgba(5, 5, 30, 0.01)',\n                'rgba(5, 5, 30, 1.0)'\n            ]\n        });\n        if (this.props.center && this.props.zoom) {\n            map.centerAndZoom(new window.BMapGL.Point(this.props.center[0], this.props.center[1]), this.props.zoom);\n        }\n\n        this.map = map;\n        this.props.onMapLoaded && this.props.onMapLoaded(map);\n    }\n\n    renderChildren() {\n\n        const {children} = this.props;\n\n        if (!children || !this.map) return;\n\n        return React.Children.map(children, child => {\n\n            if (!child) {\n                return;\n            }\n\n            if (typeof child.type === 'string') {\n                return child;\n            } else {\n                return React.cloneElement(child, {\n                    map: this.map\n                });\n            }\n\n        })\n\n    }\n\n    onRender() {\n\n        if (!this.props.render || !this.map) {\n            return;\n        }\n\n        return this.props.render(this.map);\n    }\n\n    //是否显示\n    isShow = (visible) => {\n        return visible ? 'block' : 'none'\n    }\n\n    render() {\n        const { visible } = this.props\n        let style = {\n            display: this.isShow(visible),\n            position: 'relative',\n            height: '100%',\n            ...this.props.style\n        };\n        return (\n            <div style={style}>\n                <div ref={mapRef => (this.mapRef = mapRef)} style={{width: '100%', height: '100%'}}></div>\n                {this.renderChildren()}\n                {this.onRender()}\n            </div>\n        );\n    }\n    \n}","export var simpleMapStyle = {\n    styleJson: [\n        {\n            \"featureType\": \"all\",\n            \"elementType\": \"all\",\n            \"stylers\": {\n                \"lightness\": 20,\n                \"saturation\": -70\n            }\n        }\n    ]\n}","import React, { Component } from 'react';\nimport { Map, Road } from 'react-bmap';\nimport Color from 'color';\nimport { simpleMapStyle } from './style';\n\nexport default class Map2D extends Component {\n  // 累加器\n  reducer = (accumulator, currentValue) =>  accumulator + currentValue[1]\n  \n  // 获取每个links的平均值\n  getAverageValue = (items) => items.reduce(this.reducer, 0) / items.length\n\n  parseData = (data) => {\n    const lineData = []\n    data.map(item => {\n      lineData.push({\n        geometry: {\n            type: 'LineString',\n            coordinates: item.loc,\n            value: this.getAverageValue(item.data) \n        }\n      });\n    })\n    return lineData\n  }\n\n  //是否显示\n  isShow = (visible) => {\n    return visible ? 'none' : 'block'\n  }\n\n  dataHander = data => {\n    const lineData = []\n    data.map(item => {\n      lineData.push(item.geometry.coordinates)\n    })\n    return lineData\n  }\n\n  heatDataHander = (max, min, data) => {\n    const { text } = this.props\n    const { color1, color2, color3, color4, color5 } = text\n    const colorArr = [\n      [0.2, color1],\n      [0.6, color2],\n      [0.85, color3],\n      [0.9, color4],\n      [1, color5]\n    ];\n\n    const splitList = {}\n    const category = []\n    data.map((item, index) => {\n      const percent = (item.geometry.value - min) / (max - min)\n      splitList[index] = this.getColorFromColorStops(colorArr, percent)\n      category.push(index)\n    })\n\n    return { splitList, category }\n  }\n\n  getColorFromColorStops = (colorStops, percent) => { \n    if (percent < 0) {\n      percent = 0;\n    }\n    if (percent > 1) {\n      percent = 1;\n    }\n    let i = 0;\n    for (let length = colorStops.length; i < length; ++i) {\n      const colorStop = colorStops[i];\n      if (colorStop[0] >= percent) {\n        break;\n      }\n    }\n    const startColorStop = colorStops[i - 1];\n    const endColorStop = colorStops[i];\n    let startPercent = 0;\n    let endPercent = 1;\n    let startColor = null;\n    let endColor = null;\n    if (startColorStop) {\n      startPercent = startColorStop[0];\n      startColor = startColorStop[1];\n    }\n    if (endColorStop) {\n      endPercent = endColorStop[0];\n      endColor = endColorStop[1];\n    }\n    if (!startColor) {\n      startColor = endColor || '#000';\n    }\n    if (!endColor) {\n      endColor = startColor || '#000';\n    }\n\n    let relativePercent = (percent - startPercent) / (endPercent - startPercent);\n    const startColorObj = Color(startColor)\n    const endColorObj = Color(endColor);\n    const sr = startColorObj.red();\n    const sg = startColorObj.green();\n    const sb = startColorObj.blue();\n    const sa = startColorObj.alpha();\n    const er = endColorObj.red();\n    const eg = endColorObj.green();\n    const eb = endColorObj.blue();\n    const ea = endColorObj.alpha();\n    return `rgba(${(sr + (er - sr) * relativePercent).toFixed()},` +\n      `${(sg + (eg - sg) * relativePercent).toFixed()},` +\n      `${(sb + (eb - sb) * relativePercent).toFixed()},` +\n      `${(sa + (ea - sa) * relativePercent).toFixed()})`;\n  }\n\n\n  render() {\n    const { center, zoom, text, dataWeRender } = this.props\n    const linksData = this.parseData(dataWeRender)\n\n    // 路线绘制\n    const roadPath = this.dataHander(linksData)\n    // 颜色控制\n    const { splitList, category } =  this.heatDataHander(text.max, text.min, linksData)\n\n    return (\n      <Map\n        style={{ height: '100vh' }}\n        mapStyle={simpleMapStyle}\n        center={{ lng: center[0], lat: center[1] }}\n        zoom={zoom}\n        enableScrollWheelZoom={true}\n      >\n      <Road\n        category={category}\n        splitList={splitList}\n        color='rgba(0,255,0,0.7)'\n        bgColor='rgba(255,255,255,0.1)'\n        arrowColor='rgba(255,0,0,0.7)'\n        lineWidth={10}\n        roadPath={roadPath}\n      />\n      \n      </Map>\n    );\n\n\n  }\n}","import React, { Component } from 'react';\nimport * as dat from 'dat.gui';\nimport * as mapvgl from 'mapvgl';\nimport h337 from 'heatmap.js';\nimport TitleHeader from './components/TitleHeader';\nimport Map3D from './components/Map3D';\nimport Map2D from './components/Map2D';\nimport ShenhaiData from './data/chengdu_avgspeed_sort_work.json';\n\nimport './App.less';\n\nfunction FizzyText(radius, max, min, color1, color2, color3, color4, color5) {\n    this.radius = radius || 4;\n    this.max = max || 10;\n    this.min = min || 0;\n    this.color1 = color1 || \"#FF0000\"; // CSS string\n    this.color2 = color2 || \"#FFFF33\"; // CSS string\n    this.color3 = color3 || \"#66FF66\"; // CSS string\n    this.color4 = color4 || \"#00FF00\"; // CSS string\n    this.color5 = color5 || \"#0000FF\"; // CSS string\n}\n\nclass App extends Component {\n\n    canvasWidth = 512;\n    canvasHeight = 256;\n    state = {\n        dataWeRender: ShenhaiData,\n        innerHeight: window.innerHeight,\n        visible: true,\n        text: null\n    };\n    tRef = React.createRef();\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onResize);\n        this.tRef.current.addEventListener(\"dragover\", function (e) {\n\t\t\te.preventDefault()\n\t\t\te.stopPropagation()\n\t\t})\n\t\tthis.tRef.current.addEventListener(\"dragenter\", function (e) {\n\t\t\te.preventDefault()\n\t\t\te.stopPropagation()\n\t\t})\n        this.tRef.current.addEventListener(\"drop\", this.onDropUploadClick)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        this.setState({\n            innerHeight: window.innerHeight\n        });\n    }\n\n    onMapLoaded = map => {\n        this.map = map;\n        this.initMapvgl(map);\n    }\n\n    initMapvgl = map => {\n        const { dataWeRender } = this.state\n        let { heatMax } = this.parseData(dataWeRender);\n       \n        this.view = new mapvgl.View({\n            map: map\n        });\n        // 初始化 GUI面板\n        this.initGUIPanel(4, heatMax, 0)\n        this.initCanvas();\n        this.drawMapvgl();\n        // this.drawTimeText();\n    }\n\n    initCanvas = () => {\n        const { color1, color2, color3, color4, color5 } = this.text\n        const nuConfig = {\n            container: this.canvasContainer,\n            blur: 1,\n            gradient: {\n                '.3': color1,\n                '.4': color2,\n                '.5': color3,\n                '.6': color4,\n                '1': color5,\n            },\n            backgroundColor: '#000'\n        };\n\n        this.heatmap = h337.create(nuConfig);\n        this.canvas = this.heatmap._renderer.canvas;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    drawMapvgl = () => {\n        const { dataWeRender } = this.state\n        const { heatMax, heatData, lineData } = this.parseData(dataWeRender);\n\n        this.maxText.setValue(heatMax)\n        this.radiusText.setValue(4)\n\n        heatData.map(item =>  Object.assign(item, {radius: 4}))\n\n        this.heatmap.setData({\n            max: heatMax,\n            min: 0,\n            data: heatData\n        });\n\n        this.layer = new mapvgl.WallLayer({\n            texture: this.canvas,\n            height: 30000\n        });\n\n        this.view.addLayer(this.layer);  \n        this.layer.setData(lineData);\n    }\n\n    drawTimeText = () => {\n        this.ctx.font = '20px normal 微软雅黑';\n        this.ctx.fillStyle = '#fff';\n        this.ctx.textAlign = 'left';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.save();\n        this.ctx.scale(1/3, 1);\n        for (let i = 0; i <= 4; i++) {\n            this.ctx.fillText(`${24/4*i}:00`, 0, this.canvasHeight / 4 * i);\n        }\n        this.ctx.restore();\n    }\n\n    parseData = roadData => {\n        let dataMaxWidth = roadData.length;\n        let dataMaxHeight = 0;\n        let dataMaxValue = 0;\n        let dataMinValue = Infinity;\n        let lineData = [];\n        let hotData = [];\n        let path = [];\n        for (let i = 0; i < roadData.length; i++) {\n            const link = roadData[i];\n            for (let j = 0; j < link.data.length; j++) {\n                const hot = link.data[j];\n                hotData.push([i, ...hot]);\n                dataMaxHeight = Math.max(dataMaxHeight, hot[0]);\n                dataMaxValue = Math.max(dataMaxValue, hot[1]);\n                dataMinValue = Math.min(dataMinValue, hot[1]);\n            }\n\n            let loc = link.loc.split(',');\n            for (let k = 0; k < loc.length; k+=2) {\n                const x = Number(loc[k]);\n                const y = Number(loc[k +1 ]);\n                path.push([x, y]);\n            }\n        }\n \n        lineData.push({\n            geometry: {\n                type: 'LineString',\n                coordinates: path\n            }\n        });\n\n        var heatData = [];\n        var preWidth = this.canvasWidth / dataMaxWidth;\n        var preHeight = this.canvasHeight / dataMaxHeight;\n  \n        hotData.forEach(data => {\n            heatData.push({\n                x: data[0] * preWidth,\n                y: data[1] * preHeight,\n                value: data[2]\n            })\n        });\n\n        return {\n            heatMax: dataMaxValue * 2,\n            heatData,\n            lineData\n        };\n    }\n\n    bindCanvasRef = input => {\n        this.canvasContainer = input;\n    }\n\n    layerSetData = () => {\n        const { dataWeRender } = this.state\n        const { lineData } = this.parseData(dataWeRender);\n\n        if (this.layer) {\n            // this.drawTimeText();\n            this.view.addLayer(this.layer);  \n            this.layer.setData(lineData);\n        }\n    }\n\n    changeHeatMap = () => {\n        const { dataWeRender } = this.state\n        const { heatData } = this.parseData(dataWeRender);\n        const { radius, max, min } = this.text\n        heatData.map(item =>  Object.assign(item, {radius}))\n        this.heatmap.setDataMax(max)\n        this.heatmap.setDataMin(min)\n\n        this.layerSetData()\n        this.forceUpdate()\n    }\n\n    changeHeatMapColor = () => {\n        const { color1, color2, color3, color4, color5 } = this.text\n        const nuConfig = {\n            gradient: {\n                '.3': color1,\n                '.4': color2,\n                '.5': color3,\n                '.6': color4,\n                '1': color5,\n            },\n            backgroundColor: '#000'\n        };\n        \n        this.heatmap.configure(nuConfig)\n        this.layerSetData()\n        this.forceUpdate()\n    }\n\n    onChangeClick = () => {\n        const { visible } = this.state\n        \n        this.setState({ visible: !visible })\n    }\n      \n    initGUIPanel = (radius, max, min, color1, color2, color3, color4, color5) => {\n     \n        this.gui = new dat.GUI();\n\n        this.text = new FizzyText(radius, max, min, color1, color2, color3, color4, color5);\n   \n        this.setState({ text: this.text })\n        \n        this.radiusText = this.gui.add(this.text, 'radius');\n\n        this.minText = this.gui.add(this.text, 'min');\n        this.maxText = this.gui.add(this.text, 'max');\n\n        this.color1 = this.gui.addColor(this.text, 'color1');\n        this.color2 = this.gui.addColor(this.text, 'color2');\n        this.color3 = this.gui.addColor(this.text, 'color3');\n        this.color4 = this.gui.addColor(this.text, 'color4');\n        this.color5 = this.gui.addColor(this.text, 'color5');\n\n        this.radiusText.onFinishChange(this.changeHeatMap);\n\n        this.minText.onFinishChange(this.changeHeatMap);\n        this.maxText.onFinishChange(this.changeHeatMap);\n\n        this.color1.onFinishChange(this.changeHeatMapColor)\n        this.color2.onFinishChange(this.changeHeatMapColor)\n        this.color3.onFinishChange(this.changeHeatMapColor)\n        this.color4.onFinishChange(this.changeHeatMapColor)\n        this.color5.onFinishChange(this.changeHeatMapColor)\n\n        this.gui.__controllers.forEach(e => {\n            e.updateDisplay()\n        })\n    }\n\n    // 切换控制\n    onChangeClick = () => {\n        const { visible } = this.state\n\n        this.setState({ visible: !visible })\n    }\n\n    getFileContent = (fileInput, callback) => {\n        if (fileInput.files && fileInput.files.length > 0 && fileInput.files[0].size > 0) {\n            var file = fileInput.files[0];\n            if (window.FileReader) {\n                var reader = new FileReader();\n                reader.onloadend = function (evt) {\n                    if (evt.target.readyState == FileReader.DONE) {\n                        callback(evt.target.result);\n                    }\n                };\n                // 包含中文内容用gbk编码\n                reader.readAsText(file, 'gbk');\n            }\n        }\n    };\n\n    onDropUploadClick = (e) => {\n        const _this = this\n        e.preventDefault()\n\t\te.stopPropagation()\n        var files = this.files || e.dataTransfer.files\n        var reader = new FileReader()\n        reader.readAsText(files[0], 'utf-8')\n        reader.onload = function (evt) {\n            _this.setState({ dataWeRender: JSON.parse(evt.target.result) }, () => {\n                _this.view.removeLayer(_this.layer)\n                _this.drawMapvgl()\n            })\n        }\n    }\n\n    onChangeUploadClick = () => {\n        this.getFileContent(this.tRef.current, dataWeRender => {\n            this.setState({ dataWeRender: JSON.parse(dataWeRender) }, () => {\n                this.view.removeLayer(this.layer)\n                this.drawMapvgl()\n            })\n        });\n    }\n\n    render() {\n        const { innerHeight, visible, text, dataWeRender } = this.state;\n        \n        return (\n            <React.Fragment>\n                <TitleHeader />\n                <div ref={this.bindCanvasRef} className=\"canvas\"></div>\n                {/* <input className=\"upload\" ref={this.tRef} onChange={this.onChangeUploadClick} type=\"file\" name=\"upload\" id=\"upload\" accept=\"text/json\" /> */}\n                <div ref={this.tRef} className=\"dashboard\">请将数据拖入</div>\n                <div className=\"change\" onClick={this.onChangeClick}><b>切换2D/3D</b></div>\n                <Map3D\n                    style={{ height: innerHeight }}\n                    visible={visible}\n                    center={[11586045.04, 3566065.08]}\n                    zoom={11}\n                    onMapLoaded={this.onMapLoaded}\n                    changeHeatMap={this.changeHeatMap}\n                >\n                </Map3D>\n                {text &&\n                    <Map2D\n                        center={[11586045.04,3566065.08]}\n                        zoom={11}\n                        dataWeRender={dataWeRender}\n                        text={text}\n                        visible={visible}\n                        changeHeatMap={this.changeHeatMap}\n                    >\n                    </Map2D> \n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}