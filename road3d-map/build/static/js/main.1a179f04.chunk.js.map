{"version":3,"sources":["components/TitleHeader/index.js","components/Map3D/style.js","components/Map3D/index.js","components/Map2D/style.js","components/Map2D/index.js","App.js","serviceWorker.js","index.js"],"names":["useState","showInput","setShowInput","localStorage","getItem","header","setHeader","useEffect","setItem","className","value","onChange","e","target","onPressEnter","onBlur","type","shape","icon","onClick","darkStyle","Map3D","isShow","visible","this","initMap","forceUpdate","options","Object","assign","tilt","heading","props","map","window","BMapGL","Map","mapRef","restrictCenter","style","enableKeyboard","enableScrollWheelZoom","enableInertialDragging","enableContinuousZoom","setTilt","setHeading","setDisplayOptions","indoor","poi","skyColors","center","zoom","centerAndZoom","Point","onMapLoaded","children","React","Children","child","cloneElement","render","display","position","height","ref","width","renderChildren","onRender","Component","simpleMapStyle","styleJson","Map2D","reducer","accumulator","currentValue","getAverageValue","items","reduce","length","parseData","data","lineData","item","push","geometry","coordinates","loc","dataHander","highlightRoadHander","index","heatDataHander","max","min","text","color1","color2","color3","color4","radius","colorArr","splitList","category","percent","getColorFromColorStops","colorStops","i","startColorStop","endColorStop","startPercent","endPercent","startColor","endColor","relativePercent","startColorObj","Color","endColorObj","sr","red","sg","green","sb","blue","sa","alpha","er","eg","eb","ea","toFixed","dataWeRender","selectValue","linksData","roadPath","highlightRoad","x","startIcon","BMap","Icon","Size","anchor","imageOffset","imageSize","mapStyle","lng","lat","color","bgColor","arrowColor","lineWidth","split","FizzyText","gradient","color1Value","color2Value","color3Value","color4Value","gradientOptions","0.25","0.55","0.85","1","App","canvasWidth","canvasHeight","state","ShenhaiData","innerHeight","tRef","createRef","parseTime","num","Math","floor","slice","onResize","setState","initMapvgl","heatMax","view","mapvgl","initGUIPanel","initCanvas","drawMapvgl","nuConfig","container","canvasContainer","blur","backgroundColor","heatmap","h337","create","canvas","_renderer","ctx","getContext","heatData","maxText","setValue","radiusText","setData","mockCanvas","document","createElement","mockCtx","imageData","toDataURL","img","src","_this","onload","drawImage","layer","texture","enablePreciseMap","addLayer","drawTimeText","font","fillStyle","textAlign","textBaseline","save","scale","fillText","restore","roadData","dataMaxWidth","dataMaxHeight","dataMaxValue","dataMinValue","Infinity","hotData","path","link","j","hot","k","Number","y","preWidth","preHeight","forEach","bindCanvasRef","input","layerSetData","changeHeatMap","setDataMax","setDataMin","clearRect","setOptions","changeHeatMapAllColor","configure","changeHeatMapColor","onChangeClick","gui","dat","GUI","nameMap","add","minText","onFinishChange","addGradient","addColor","__controllers","updateDisplay","onDropUploadClick","preventDefault","stopPropagation","files","dataTransfer","reader","FileReader","readAsText","evt","JSON","parse","result","removeLayer","getFileContent","current","fileInput","callback","size","file","onloadend","addEventListener","ceil","pageX","getBoundingClientRect","left","pageY","top","showPoint","filter","nowTime","removeEventListener","Fragment","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a179f04.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Input, Button} from 'antd';\nimport './index.less';\n\nexport default () => {\n    const [showInput, setShowInput] = useState(false);\n    const [header, setHeader] = useState(localStorage.getItem('title') || '标题');\n\n    useEffect(() => {\n        localStorage.setItem('title', header);\n    }, [header]);\n\n    return (\n        <div className=\"title-header\">\n            <h1>{header}</h1>\n            {showInput && <Input\n                className=\"title-input\"\n                value={header}\n                onChange={e => {setHeader(e.target.value);}}\n                onPressEnter={() => {setShowInput(!showInput);}}\n                onBlur={() => {setShowInput(!showInput);}}\n            />}\n            {!showInput && <Button\n                className=\"title-btn\"\n                type=\"dashed\"\n                shape=\"circle\"\n                icon=\"edit\"\n                onClick={() => {setShowInput(!showInput);}}\n            />}\n        </div>\n    );\n};\n","var snowStyle = [{\n    \"featureType\": \"background\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#fefefeff\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#f0f1f7ff\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"nationalway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"nationalway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"provincialway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"provincialway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"railway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"nationalwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"nationalwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"provincialwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"provincialwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"tertiarywaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"tertiarywaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subwaylabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subwaylabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#80868dff\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"districtlabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#7d82b0ff\"\n    }\n}, {\n    \"featureType\": \"districtlabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"on\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#80868dff\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"manmade\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"manmade\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#eef1fbff\"\n    }\n}, {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        //\"color\": \"#a7c9ffff\"\n        \"color\": \"#a7c9ffff\"\n    }\n}, {\n    \"featureType\": \"green\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#eef1fbff\",\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"on\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#7d82b0ff\"\n    }\n}, {\n    \"featureType\": \"town\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"village\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"weight\": 3\n    }\n}, {\n    \"featureType\": \"cityhighway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"arterial\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#e8eaf5ff\"\n    }\n}, {\n    \"featureType\": \"arterial\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"cityhighway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}];\n\nvar darkStyle = [{\n    \"featureType\": \"background\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#070c17ff\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#151e25ff\"\n    }\n}, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"nationalway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"nationalway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"provincialway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"provincialway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"railway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"nationalwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"nationalwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"provincialwaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"provincialwaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"tertiarywaysign\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"tertiarywaysign\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subwaylabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subwaylabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#80868dff\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"districtlabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#71767aff\"\n    }\n}, {\n    \"featureType\": \"districtlabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"poilabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"on\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#80868dff\"\n    }\n}, {\n    \"featureType\": \"airportlabel\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"manmade\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"manmade\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#070c17ff\"\n    }\n}, {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#0e141dff\"\n    }\n}, {\n    \"featureType\": \"green\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"color\": \"#122228ff\",\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"subway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"on\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": {\n        \"color\": \"#5f6468ff\"\n    }\n}, {\n    \"featureType\": \"town\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"village\",\n    \"elementType\": \"labels\",\n    \"stylers\": {\n        \"visibility\": \"off\"\n    }\n}, {\n    \"featureType\": \"highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": {\n        \"weight\": 3\n    }\n}, {\n    \"featureType\": \"cityhighway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"arterial\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": {\n        \"color\": \"#27303bff\"\n    }\n}, {\n    \"featureType\": \"arterial\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}, {\n    \"featureType\": \"cityhighway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": {\n        \"color\": \"#ffffff0\"\n    }\n}];\n\nexport {darkStyle, snowStyle};","import React, {\n    Component\n} from 'react';\nimport {\n    darkStyle\n} from './style';\n\nexport default class Map3D extends Component {\n\n    componentDidMount() {\n        this.initMap();\n        this.forceUpdate();\n    }\n\n    initMap() {\n\n        let options = Object.assign({\n            tilt: 60,\n            heading: 0\n        }, this.props.options);\n        let map = new window.BMapGL.Map(this.mapRef, {\n            restrictCenter: false,\n            style: options.style || darkStyle\n        });\n        map.enableKeyboard();\n        map.enableScrollWheelZoom();\n        map.enableInertialDragging();\n        map.enableContinuousZoom();\n        map.setTilt(options.tilt);\n        map.setHeading(options.heading);\n        map.setDisplayOptions({\n            indoor: false,\n            poi: true,\n            skyColors: options.skyColors || [\n                'rgba(5, 5, 30, 0.01)',\n                'rgba(5, 5, 30, 1.0)'\n            ]\n        });\n        if (this.props.center && this.props.zoom) {\n            map.centerAndZoom(new window.BMapGL.Point(this.props.center[0], this.props.center[1]), this.props.zoom);\n        }\n\n        this.map = map;\n        this.props.onMapLoaded && this.props.onMapLoaded(map);\n    }\n\n    renderChildren() {\n\n        const {\n            children\n        } = this.props;\n\n        if (!children || !this.map) return;\n\n        return React.Children.map(children, child => {\n\n            if (!child) {\n                return;\n            }\n\n            if (typeof child.type === 'string') {\n                return child;\n            } else {\n                return React.cloneElement(child, {\n                    map: this.map\n                });\n            }\n\n        })\n\n    }\n\n    onRender() {\n\n        if (!this.props.render || !this.map) {\n            return;\n        }\n\n        return this.props.render(this.map);\n    }\n\n    //是否显示\n    isShow = (visible) => {\n        return visible ? 'block' : 'none'\n    }\n\n    render() {\n        const {\n            visible\n        } = this.props\n        let style = {\n            display: this.isShow(visible),\n            position: 'relative',\n            height: '100%',\n            ...this.props.style\n        };\n        return (\n            <div style={style} >\n                < div ref = { mapRef => (this.mapRef = mapRef)}\n                    style = {{ width: '100%', height: '100%' }} > \n                </div>\n                { this.renderChildren() }\n                { this.onRender() }\n            </div>\n        );\n    }\n\n}","export var simpleMapStyle = {\n    styleJson: [\n        {\n            \"featureType\": \"all\",\n            \"elementType\": \"all\",\n            \"stylers\": {\n                \"lightness\": 20,\n                \"saturation\": -70\n            }\n        }\n    ]\n}","import React, { Component } from 'react';\nimport { Map, Road, Marker } from 'react-bmap';\nimport Color from 'color';\nimport { simpleMapStyle } from './style';\n\nexport default class Map2D extends Component {\n  // 累加器\n  reducer = (accumulator, currentValue) =>  accumulator + currentValue[1]\n  \n  // 获取每个links的平均值\n  getAverageValue = (items) => items.reduce(this.reducer, 0) / items.length\n\n  parseData = (data) => {\n    const lineData = []\n    data.map(item => {\n      lineData.push({\n        geometry: {\n            type: 'LineString',\n            coordinates: item.loc,\n            value: this.getAverageValue(item.data) \n        }\n      });\n    })\n    return lineData\n  }\n\n  //是否显示\n  isShow = (visible) => {\n    return visible ? 'none' : 'block'\n  }\n\n  dataHander = data => {\n    const lineData = []\n    data.map(item => {\n      lineData.push(item.geometry.coordinates)\n    })\n    return lineData\n  }\n\n  highlightRoadHander = (data, index = 0) => {\n    return [data[index].geometry.coordinates]\n  }\n\n  heatDataHander = (max, min, data) => {\n    const { text } = this.props\n    const { color1, color2, color3, color4, radius} = text\n    const colorArr = [\n      [0.25, color1],\n      [0.55, color2],\n      [0.85, color3],\n      [1, color4]\n    ];\n\n    const splitList = {}\n    const category = []\n    data.map((item, index) => {\n      const percent = (item.geometry.value * radius - min) / (max - min)\n      splitList[index] = this.getColorFromColorStops(colorArr, percent)\n      category.push(index)\n    })\n\n    return { splitList, category }\n  }\n\n  getColorFromColorStops = (colorStops, percent) => { \n    if (percent < 0) {\n      percent = 0;\n    }\n    if (percent > 1) {\n      percent = 1;\n    }\n    let i = 0;\n    for (let length = colorStops.length; i < length; ++i) {\n      const colorStop = colorStops[i];\n      if (colorStop[0] >= percent) {\n        break;\n      }\n    }\n    const startColorStop = colorStops[i - 1];\n    const endColorStop = colorStops[i];\n    let startPercent = 0;\n    let endPercent = 1;\n    let startColor = null;\n    let endColor = null;\n    if (startColorStop) {\n      startPercent = startColorStop[0];\n      startColor = startColorStop[1];\n    }\n    if (endColorStop) {\n      endPercent = endColorStop[0];\n      endColor = endColorStop[1];\n    }\n    if (!startColor) {\n      startColor = endColor || '#000';\n    }\n    if (!endColor) {\n      endColor = startColor || '#000';\n    }\n\n    let relativePercent = (percent - startPercent) / (endPercent - startPercent);\n    const startColorObj = Color(startColor)\n    const endColorObj = Color(endColor);\n    const sr = startColorObj.red();\n    const sg = startColorObj.green();\n    const sb = startColorObj.blue();\n    const sa = startColorObj.alpha();\n    const er = endColorObj.red();\n    const eg = endColorObj.green();\n    const eb = endColorObj.blue();\n    const ea = endColorObj.alpha();\n    return `rgba(${(sr + (er - sr) * relativePercent).toFixed()},` +\n      `${(sg + (eg - sg) * relativePercent).toFixed()},` +\n      `${(sb + (eb - sb) * relativePercent).toFixed()},` +\n      `${(sa + (ea - sa) * relativePercent).toFixed()})`;\n  }\n\n\n  render() {\n    const { center, zoom, text, dataWeRender, selectValue } = this.props\n    const linksData = this.parseData(dataWeRender)\n\n    // 路线绘制\n    const roadPath = this.dataHander(linksData)\n\n    // 高亮路线\n    const highlightRoad = selectValue && this.highlightRoadHander(linksData, selectValue.x)\n    \n    // 颜色控制\n    const { splitList, category } = this.heatDataHander(text.max, text.min, linksData)\n    \n    let markersIconUrl =\n      'http://webmap1.map.bdstatic.com/wolfman/static/common/images/markers_new2x_fbb9e99.png';\n    const startIcon = new window.BMap.Icon(markersIconUrl, new window.BMap.Size(20, 26), {\n      anchor: new window.BMap.Size(12, 25),\n      imageOffset: new window.BMap.Size(-180, -140),\n      imageSize: new window.BMap.Size(300, 300)\n    });\n\n    return (\n      <Map\n        style={{ height: '100vh' }}\n        mapStyle={simpleMapStyle}\n        center={{ lng: center[0], lat: center[1] }}\n        zoom={zoom}\n        enableScrollWheelZoom={true}\n      >\n      {/* <Road\n        category={[1]}\n        splitList={{\n          1: '#0000FF'\n        }}\n        color='rgba(0,255,0,0.7)'\n        bgColor='rgba(255,255,255,0.1)'\n        arrowColor='rgba(255,0,0,0.7)'\n        lineWidth={40}\n        roadPath={highlightRoad}\n      /> */}\n      <Road\n        category={category}\n        splitList={splitList}\n        color='rgba(0,255,0,0.7)'\n        bgColor='rgba(255,255,255,0.1)'\n        arrowColor='rgba(255,0,0,0.7)'\n        lineWidth={10}\n        roadPath={roadPath}\n        />\n      {highlightRoad && <Marker\n          position={{ lng: highlightRoad[0].split(',')[0], lat: highlightRoad[0].split(',')[1] }}\n          icon={startIcon}\n      >\n      </Marker>}\n      </Map>\n    );\n\n\n  }\n}","import React, { Component } from 'react';\nimport * as mapvgl from 'mapvgl';\nimport Color from 'color';\nimport h337 from 'heatmap.js';\nimport TitleHeader from './components/TitleHeader';\nimport Map3D from './components/Map3D';\nimport Map2D from './components/Map2D';\nimport ShenhaiData from './data/chengdu_avgspeed_sort_work.json';\n\nimport './App.less';\n\nfunction FizzyText(radius, max, min, gradient, color1Value, color1, color2Value, color2, color3Value, color3, color4Value, color4) {\n    this.radius = radius;\n    this.max = max;\n    this.min = min;\n    this.gradient = gradient \n\n    this.color1Value = color1Value;\n    this.color1 = color1;\n    this.color2Value = color2Value;\n    this.color2 = color2;\n    this.color3Value = color3Value;\n    this.color3 = color3;\n    this.color4Value = color4Value;\n    this.color4 = color4;\n\n}\n\nconst gradientOptions = [\n    { \n        0.25: \"rgba(0, 0, 255, 1)\",\n        0.55: \"rgba(0, 255, 0, 1)\",\n        0.85: \"rgba(255, 255, 0, 1)\",\n        1.0: \"rgba(255, 0, 0, 1)\"\n    },\n    { \n        0.25: \"rgba(255, 0, 0, 1)\",\n        0.55: \"rgba(255, 255, 0, 1)\",\n        0.85: \"rgba(0, 255, 0, 1)\",\n        1.0: \"rgba(0, 0, 255, 1)\"\n    },\n    { \n        0.25: \"rgba(0, 0, 255, 1)\",\n        0.55: \"rgba(0, 102, 255, 1)\",\n        0.85: \"rgba(0, 187, 255, 1)\",\n        1.0: 'rgba(255, 255, 255, 1)'\n    },\n    { \n        0.25: 'rgba(255, 255, 255, 1)',\n        0.55: \"rgba(0, 187, 255, 1)\",\n        0.85: \"rgba(0, 102, 255, 1)\",\n        1: \"rgba(0, 0, 255, 1)\"\n    }\n  ];\n\nclass App extends Component {\n\n    canvasWidth = 298;\n    canvasHeight = 96;\n    state = {\n        dataWeRender: ShenhaiData,\n        innerHeight: window.innerHeight,\n        visible: true,\n        text: null,\n        selectValue: null\n    };\n    tRef = React.createRef();\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onResize);\n        this.tRef.current.addEventListener(\"dragover\", function (e) {\n\t\t\te.preventDefault()\n\t\t\te.stopPropagation()\n\t\t})\n\t\tthis.tRef.current.addEventListener(\"dragenter\", function (e) {\n\t\t\te.preventDefault()\n\t\t\te.stopPropagation()\n\t\t})\n        this.tRef.current.addEventListener(\"drop\", this.onDropUploadClick)\n\n        this.canvasContainer.addEventListener('click', (e) => {\n            const { dataWeRender } = this.state\n            const x = Math.ceil((e.pageX -  this.ctx.canvas.getBoundingClientRect().left) / 2)\n            const y = Math.ceil((e.pageY - this.ctx.canvas.getBoundingClientRect().top) / 2)\n            const { hotData } = this.parseData(dataWeRender);   \n            \n            const showPoint = hotData.filter(item => item[0] === x && item[1]  === y - 1 ) || []\n            const selectValue = {\n                x,\n                y,\n                showPoint,\n                nowTime: this.parseTime(y / 96 * 24)\n            }\n            this.setState({ selectValue })\n    \n        })\n    }\n\n    parseTime = (num) => {\n        return ('0' + Math.floor(num) % 24).slice(-2) + ':' + ((num % 1)*60 + '0').slice(0, 2);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        this.setState({\n            innerHeight: window.innerHeight\n        });\n    }\n\n    onMapLoaded = map => {\n        this.map = map;\n        this.initMapvgl(map);\n    }\n\n    initMapvgl = map => {\n        const { dataWeRender } = this.state\n        let { heatMax } = this.parseData(dataWeRender);\n       \n        this.view = new mapvgl.View({\n            map: map\n        });\n        // 初始化 GUI面板\n        this.initGUIPanel(4, heatMax, 0, { \n            0.25: \"rgba(0, 0, 255, 1)\",\n            0.55: \"rgba(0, 255, 0, 1)\",\n            0.85: \"rgba(255, 255, 0, 1)\",\n            1.0: \"rgba(255, 0, 0, 1)\"\n        },  heatMax * .25, \"rgba(0, 0, 255, 1)\",\n            heatMax * .55, \"rgba(0, 255, 0, 1)\",\n            heatMax * .85, \"rgba(255, 255, 0, 1)\",\n            heatMax * 1, \"rgba(255, 0, 0, 1)\")\n        this.initCanvas();\n        this.drawMapvgl();\n        // this.drawTimeText()\n    }\n\n    initCanvas = () => {\n        const { gradient } = this.text\n\n        const nuConfig = {\n            container: this.canvasContainer,\n            blur: 1,\n            gradient,\n            backgroundColor: '#000'\n        };\n\n        this.heatmap = h337.create(nuConfig);\n        this.canvas = this.heatmap._renderer.canvas;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    drawMapvgl = () => {\n        const { dataWeRender } = this.state\n        const { heatMax, heatData, lineData } = this.parseData(dataWeRender);\n\n        this.maxText.setValue(heatMax)\n        this.color1Value.setValue(heatMax * .25)\n        this.color2Value.setValue(heatMax * .55)\n        this.color3Value.setValue(heatMax * .85)\n        this.color4Value.setValue(heatMax * 1)        \n\n        this.radiusText.setValue(2)\n\n        heatData.map(item =>  Object.assign(item, {radius: 4}))\n\n        this.heatmap.setData({\n            max: heatMax,\n            min: 0,\n            data: heatData\n        });\n        this.mockCanvas = document.createElement('canvas');\n        this.mockCanvas.width = 256\n        this.mockCanvas.height = 128\n        this.mockCtx = this.mockCanvas.getContext('2d');\n\n        this.imageData = this.canvas.toDataURL();\n        let img = this.img = document.createElement('img');\n        this.img.src = this.imageData\n        this.img.width = 299 \n        this.img.height = 96 \n        const _this = this\n        this.img.onload = function () {\n            _this.mockCtx.drawImage(img, 0, 0, 299, 96, 0, 0, 256, 128);\n            _this.layer = new mapvgl.WallLayer({\n                texture: _this.mockCanvas,\n                height: 12000,\n                enablePreciseMap: true\n            });\n            _this.view.addLayer(_this.layer);  \n            _this.layer.setData(lineData);\n        }\n\n    }\n\n    drawTimeText = () => {\n        this.ctx.font = '20px normal 微软雅黑';\n        this.ctx.fillStyle = '#fff';\n        this.ctx.textAlign = 'left';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.save();\n        this.ctx.scale(1/4, 1);\n        for (let i = 0; i <= 4; i++) {\n            this.ctx.fillText(`${24/4*i}:00`, 0, this.canvasHeight / 4 * i);\n        }\n        this.ctx.restore();\n    }\n\n    parseData = roadData => {\n        let dataMaxWidth = roadData.length;\n        let dataMaxHeight = 0;\n        let dataMaxValue = 0;\n        let dataMinValue = Infinity;\n        let lineData = [];\n        let hotData = [];\n        let path = [];\n        for (let i = 0; i < roadData.length; i++) {\n            const link = roadData[i];\n            for (let j = 0; j < link.data.length; j++) {\n                const hot = link.data[j];\n                hotData.push([i, ...hot]);\n                dataMaxHeight = Math.max(dataMaxHeight, hot[0]);\n                dataMaxValue = Math.max(dataMaxValue, hot[1]);\n                dataMinValue = Math.min(dataMinValue, hot[1]);\n            }\n\n            let loc = link.loc.split(',');\n            for (let k = 0; k < loc.length; k+=2) {\n                const x = Number(loc[k]);\n                const y = Number(loc[k +1 ]);\n                path.push([x, y]);\n            }\n        }\n \n        lineData.push({\n            geometry: {\n                type: 'LineString',\n                coordinates: path\n            }\n        });\n\n        var heatData = [];\n        var preWidth = this.canvasWidth / dataMaxWidth;\n        var preHeight = this.canvasHeight / dataMaxHeight;\n  \n        hotData.forEach(data => {\n            heatData.push({\n                x: data[0] * preWidth,\n                y: data[1] * preHeight,\n                value: data[2]\n            })\n        });\n\n        return {\n            heatMax: dataMaxValue,\n            heatData,\n            lineData,\n            hotData \n        };\n    }\n\n    bindCanvasRef = input => {\n        this.canvasContainer = input;\n    }\n\n    layerSetData = () => {\n        const { dataWeRender } = this.state\n        const { lineData } = this.parseData(dataWeRender);\n\n        if (this.layer) {\n            this.view.addLayer(this.layer);  \n            this.layer.setData(lineData);\n        }\n    }\n\n    changeHeatMap = () => {\n        const { dataWeRender } = this.state\n        const { heatData } = this.parseData(dataWeRender);\n        const { radius, max, min } = this.text\n        heatData.map(item =>  Object.assign(item, {radius}))\n        this.heatmap.setDataMax(max)\n        this.heatmap.setDataMin(min)\n\n        this.heatmap.setData({\n            max: max,\n            min: min,\n            data: heatData\n        });\n\n        this.mockCtx = this.mockCanvas.getContext('2d');\n        this.mockCtx.clearRect(0, 0, this.mockCanvas.width, this.mockCanvas.height)\n        let imageData = this.heatmap._renderer.canvas.toDataURL();\n\n        this.img.src = imageData\n        const _this = this\n\n        this.img.onload = function () {\n            _this.mockCtx.drawImage(_this.img, 0, 0, 299, 96, 0, 0, 256, 128);\n            _this.layer.setOptions({\n                texture: _this.mockCanvas,\n            })\n        }\n        this.layerSetData()\n        this.forceUpdate()\n    }\n\n    getColorFromColorStops = (colorStops, percent) => { \n        if (percent < 0) {\n          percent = 0;\n        }\n        if (percent > 1) {\n          percent = 1;\n        }\n        let i = 0;\n        for (let length = colorStops.length; i < length; ++i) {\n          const colorStop = colorStops[i];\n          if (colorStop[0] >= percent) {\n            break;\n          }\n        }\n        const startColorStop = colorStops[i - 1];\n        const endColorStop = colorStops[i];\n        let startPercent = 0;\n        let endPercent = 1;\n        let startColor = null;\n        let endColor = null;\n        if (startColorStop) {\n          startPercent = startColorStop[0];\n          startColor = startColorStop[1];\n        }\n        if (endColorStop) {\n          endPercent = endColorStop[0];\n          endColor = endColorStop[1];\n        }\n        if (!startColor) {\n          startColor = endColor || '#000';\n        }\n        if (!endColor) {\n          endColor = startColor || '#000';\n        }\n    \n        let relativePercent = (percent - startPercent) / (endPercent - startPercent);\n        const startColorObj = Color(startColor)\n        const endColorObj = Color(endColor);\n        const sr = startColorObj.red();\n        const sg = startColorObj.green();\n        const sb = startColorObj.blue();\n        const sa = startColorObj.alpha();\n        const er = endColorObj.red();\n        const eg = endColorObj.green();\n        const eb = endColorObj.blue();\n        const ea = endColorObj.alpha();\n        return `rgba(${(sr + (er - sr) * relativePercent).toFixed()},` +\n          `${(sg + (eg - sg) * relativePercent).toFixed()},` +\n          `${(sb + (eb - sb) * relativePercent).toFixed()},` +\n          `${(sa + (ea - sa) * relativePercent).toFixed()})`;\n      }\n\n    changeHeatMapAllColor = () => {\n        const { max, color1Value, color2Value, color3Value, color4Value, gradient} = this.text\n\n        const nuConfig = {\n            gradient,\n            backgroundColor: '#000'\n        };\n\n        this.color1Value.setValue(max * 0.25)\n        this.color2Value.setValue(max * 0.55)\n        this.color3Value.setValue(max * 0.85)\n        this.color4Value.setValue(max * 1)\n\n\n        \n        this.color1.setValue(gradient['0.25'])\n        this.color2.setValue(gradient['0.55'])\n        this.color3.setValue(gradient['0.85'])\n        this.color4.setValue(gradient['1'])        \n\n        this.heatmap.configure(nuConfig)\n\n        this.mockCtx = this.mockCanvas.getContext('2d');\n        this.mockCtx.clearRect(0, 0, this.mockCanvas.width, this.mockCanvas.height)\n        let imageData = this.heatmap._renderer.canvas.toDataURL();\n\n        this.img.src = imageData\n    \n        const _this = this\n        this.img.onload = function () {\n            _this.mockCtx.drawImage(_this.img, 0, 0, 299, 96, 0, 0, 256, 128);\n            _this.layer.setOptions({\n                texture: _this.mockCanvas,\n            })\n        }\n        this.layerSetData()\n        this.forceUpdate()\n    }\n    changeHeatMapColor = () => {\n        const { max, color1Value, color2Value, color3Value, color4Value, color1, color2, color3, color4} = this.text\n        \n        const colorArr = [\n            [0.25, color1],\n            [0.55, color2],\n            [0.85, color3],\n            [1, color4]\n        ];\n  \n        const nuConfig = {\n            gradient: {\n                [color1Value / max] : color1,\n                [color2Value / max] : color2,\n                [color3Value / max] : color3,\n                [color4Value / max] : color4,\n                // [color1Value / max] : this.getColorFromColorStops(colorArr, color1Value / max),\n                // [color2Value / max] : this.getColorFromColorStops(colorArr, color2Value / max),\n                // [color3Value / max] : this.getColorFromColorStops(colorArr, color3Value / max),\n                // [color4Value / max] : this.getColorFromColorStops(colorArr, color4Value / max),\n            },\n            backgroundColor: '#000'\n        };      \n\n        // this.color1.setValue(nuConfig.gradient[color1Value / max])\n        // this.color2.setValue(nuConfig.gradient[color2Value / max])\n        // this.color3.setValue(nuConfig.gradient[color3Value / max])\n        // this.color4.setValue(nuConfig.gradient[color4Value / max])\n        \n        this.color1Value.max(max)\n        this.color2Value.max(max)\n        this.color3Value.max(max)\n        this.color4Value.max(max)\n\n\n        this.heatmap.configure(nuConfig)\n\n        this.mockCtx = this.mockCanvas.getContext('2d');\n        this.mockCtx.clearRect(0, 0, this.mockCanvas.width, this.mockCanvas.height)\n        let imageData = this.heatmap._renderer.canvas.toDataURL();\n\n        this.img.src = imageData\n    \n        const _this = this\n        this.img.onload = function () {\n            _this.mockCtx.drawImage(_this.img, 0, 0, 299, 96, 0, 0, 256, 128);\n            _this.layer.setOptions({\n                texture: _this.mockCanvas,\n            })\n        }\n        this.layerSetData()\n        this.forceUpdate()\n    }\n\n    onChangeClick = () => {\n        const { visible } = this.state\n        \n        this.setState({ visible: !visible })\n    }\n      \n    initGUIPanel = (radius, max, min, gradient, color1Value, color1, color2Value, color2, color3Value, color3, color4Value, color4) => {\n       \n        this.gui = new window.dat.GUI({\n            nameMap: {\n                radius: '辐射半径',\n                min: '最小阈值',\n                max: '最大阈值',\n                gradient: '渐变色',\n                color1Value: '一档位值',\n                color1: '一档颜色',\n                color2Value: '二档位值',\n                color2: '二档颜色',\n                color3Value: '三档位值',\n                color3: '三档颜色',\n                color4Value: '四档位值',\n                color4: '四档颜色',\n            }\n        });\n\n        this.text = new FizzyText(radius, max, min, gradient, color1Value, color1, color2Value, color2, color3Value, color3, color4Value, color4);\n   \n        this.setState({ text: this.text })\n        \n        this.radiusText = this.gui.add(this.text, 'radius').min(0.5);\n        this.minText = this.gui.add(this.text, 'min').max(max);\n        this.maxText = this.gui.add(this.text, 'max');\n\n        this.radiusText.onFinishChange(this.changeHeatMap);\n        this.minText.onFinishChange(this.changeHeatMap);\n        this.maxText.onFinishChange(this.changeHeatMap);\n        \n        this.gradientOptions = this.gui.addGradient(this.text, 'gradient', gradientOptions);\n        this.gradientOptions.onFinishChange(this.changeHeatMapAllColor);\n\n        // 第一档\n        this.color1Value = this.gui.add(this.text, 'color1Value').max(max);\n        this.color1Value.onFinishChange(this.changeHeatMapColor);\n        this.color1 = this.gui.addColor(this.text, 'color1');\n        this.color1.onFinishChange(this.changeHeatMapColor);\n        // 第二档\n        this.color2Value = this.gui.add(this.text, 'color2Value').max(max);\n        this.color2Value.onFinishChange(this.changeHeatMapColor);\n        this.color2 = this.gui.addColor(this.text, 'color2');\n        this.color2.onFinishChange(this.changeHeatMapColor);\n        // 第三档\n        this.color3Value = this.gui.add(this.text, 'color3Value').max(max);\n        this.color3Value.onFinishChange(this.changeHeatMapColor);\n        this.color3 = this.gui.addColor(this.text, 'color3');\n        this.color3.onFinishChange(this.changeHeatMapColor);\n        // 第四档\n        this.color4Value = this.gui.add(this.text, 'color4Value').max(max);\n        this.color4Value.onFinishChange(this.changeHeatMapColor);\n        this.color4 = this.gui.addColor(this.text, 'color4');\n        this.color4.onFinishChange(this.changeHeatMapColor);\n\n        this.gui.__controllers.forEach(e => {\n            e.updateDisplay()\n        })\n    }\n\n    // 切换控制\n    onChangeClick = () => {\n        const { visible } = this.state\n\n        this.setState({ visible: !visible })\n    }\n\n    onDropUploadClick = (e) => {\n        const _this = this\n        e.preventDefault()\n\t\te.stopPropagation()\n        var files = this.files || e.dataTransfer.files\n        var reader = new FileReader()\n        reader.readAsText(files[0], 'utf-8')\n        reader.onload = function (evt) {\n            _this.setState({ dataWeRender: JSON.parse(evt.target.result) }, () => {\n                _this.view.removeLayer(_this.layer)\n                _this.drawMapvgl()\n            })\n        }\n    }\n\n    onDropUploadClick = () => {\n        this.getFileContent(this.tRef.current, dataWeRender => {\n            this.setState({ dataWeRender: JSON.parse(dataWeRender) }, () => {\n                this.view.removeLayer(this.layer)\n                this.drawMapvgl()\n            })\n        });\n    }\n    \n    getFileContent = (fileInput, callback) => {\n        const _this = this\n        if (fileInput.files && fileInput.files.length > 0 && fileInput.files[0].size > 0) {\n            var file = fileInput.files[0];\n            if (window.FileReader) {\n                var reader = new FileReader();\n                reader.onloadend = function (evt) {\n                    _this.setState({ dataWeRender: JSON.parse(evt.target.result) }, () => {\n                        _this.view.removeLayer(_this.layer)\n                        _this.drawMapvgl()\n                    })\n                };\n                // 包含中文内容用gbk编码\n                reader.readAsText(file, 'gbk');\n            }\n        }\n    };\n\n    render() {\n        const { innerHeight, visible, text, dataWeRender, selectValue } = this.state;\n        \n        return (\n            <React.Fragment>\n                <TitleHeader />\n                <div ref={this.bindCanvasRef} className=\"canvas\"></div>\n                {selectValue && selectValue.showPoint[0] &&\n                <div className=\"show\">\n                    <p>当前时间：{selectValue.nowTime}</p>\n                    <p>当前值：{(selectValue.showPoint[0][2]).toFixed(2)}</p>\n                </div>}\n                {selectValue && !selectValue.showPoint[0] &&\n                <div className=\"show\">\n                    <p>当前点暂无数据</p>\n                </div>}\n                {/* <div ref={this.tRef} className=\"dashboard\">请将数据拖入</div> */}\n                <input type='file' ref={this.tRef} className=\"fileUpload\" onChange={this.onDropUploadClick}></input>\n                <div className=\"change\" onClick={this.onChangeClick}><b>切换2D/3D</b></div>\n                <Map3D\n                    style={{ height: innerHeight }}\n                    visible={visible}\n                    center={[11586045.04, 3566065.08]}\n                    zoom={11}\n                    onMapLoaded={this.onMapLoaded}\n                >\n                </Map3D>\n                {text &&\n                    <Map2D\n                        center={[11586045.04,3566065.08]}\n                        zoom={11}\n                        dataWeRender={dataWeRender}\n                        text={text}\n                        visible={visible}\n                        selectValue={selectValue}\n                    >\n                    </Map2D> \n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}